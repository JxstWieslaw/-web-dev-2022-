{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport { PointerLockControls as PointerLockControls$1 } from 'three-stdlib';\nconst PointerLockControls = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    domElement,\n    selector,\n    onChange,\n    onLock,\n    onUnlock,\n    enabled = true,\n    ...props\n  } = _ref;\n  const {\n    camera,\n    ...rest\n  } = props;\n  const get = useThree(state => state.get);\n  const setEvents = useThree(state => state.setEvents);\n  const gl = useThree(state => state.gl);\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const events = useThree(state => state.events);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const [controls] = React.useState(() => new PointerLockControls$1(explCamera));\n  React.useEffect(() => {\n    if (enabled) {\n      controls.connect(explDomElement); // Force events to be centered while PLC is active\n\n      const oldComputeOffsets = get().events.compute;\n      setEvents({\n        compute(event, state) {\n          const offsetX = state.size.width / 2;\n          const offsetY = state.size.height / 2;\n          state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);\n          state.raycaster.setFromCamera(state.pointer, state.camera);\n        }\n\n      });\n      return () => {\n        controls.disconnect();\n        setEvents({\n          compute: oldComputeOffsets\n        });\n      };\n    }\n  }, [enabled, controls]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onLock) controls.addEventListener('lock', onLock);\n    if (onUnlock) controls.addEventListener('unlock', onUnlock); // Enforce previous interaction\n\n    const handler = () => controls.lock();\n\n    const elements = selector ? Array.from(document.querySelectorAll(selector)) : [document];\n    elements.forEach(element => element && element.addEventListener('click', handler));\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onLock) controls.addEventListener('lock', onLock);\n      if (onUnlock) controls.addEventListener('unlock', onUnlock);\n      elements.forEach(element => element ? element.removeEventListener('click', handler) : undefined);\n    };\n  }, [onChange, onLock, onUnlock, selector]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, rest));\n});\nexport { PointerLockControls };","map":{"version":3,"sources":["C:/Users/pc/Documents/Repositories/web-dev-2022/26_try-on-gallery/features/26_r3f-web-avatar/client/node_modules/@react-three/drei/core/PointerLockControls.js"],"names":["_extends","useThree","React","PointerLockControls","PointerLockControls$1","forwardRef","ref","domElement","selector","onChange","onLock","onUnlock","enabled","props","camera","rest","get","state","setEvents","gl","defaultCamera","invalidate","events","explCamera","explDomElement","connected","controls","useState","useEffect","connect","oldComputeOffsets","compute","event","offsetX","size","width","offsetY","height","pointer","set","raycaster","setFromCamera","disconnect","callback","e","addEventListener","handler","lock","elements","Array","from","document","querySelectorAll","forEach","element","removeEventListener","undefined","createElement","object"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport { PointerLockControls as PointerLockControls$1 } from 'three-stdlib';\n\nconst PointerLockControls = /*#__PURE__*/React.forwardRef(({\n  domElement,\n  selector,\n  onChange,\n  onLock,\n  onUnlock,\n  enabled = true,\n  ...props\n}, ref) => {\n  const {\n    camera,\n    ...rest\n  } = props;\n  const get = useThree(state => state.get);\n  const setEvents = useThree(state => state.setEvents);\n  const gl = useThree(state => state.gl);\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const events = useThree(state => state.events);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const [controls] = React.useState(() => new PointerLockControls$1(explCamera));\n  React.useEffect(() => {\n    if (enabled) {\n      controls.connect(explDomElement); // Force events to be centered while PLC is active\n\n      const oldComputeOffsets = get().events.compute;\n      setEvents({\n        compute(event, state) {\n          const offsetX = state.size.width / 2;\n          const offsetY = state.size.height / 2;\n          state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);\n          state.raycaster.setFromCamera(state.pointer, state.camera);\n        }\n\n      });\n      return () => {\n        controls.disconnect();\n        setEvents({\n          compute: oldComputeOffsets\n        });\n      };\n    }\n  }, [enabled, controls]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onLock) controls.addEventListener('lock', onLock);\n    if (onUnlock) controls.addEventListener('unlock', onUnlock); // Enforce previous interaction\n\n    const handler = () => controls.lock();\n\n    const elements = selector ? Array.from(document.querySelectorAll(selector)) : [document];\n    elements.forEach(element => element && element.addEventListener('click', handler));\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onLock) controls.addEventListener('lock', onLock);\n      if (onUnlock) controls.addEventListener('unlock', onUnlock);\n      elements.forEach(element => element ? element.removeEventListener('click', handler) : undefined);\n    };\n  }, [onChange, onLock, onUnlock, selector]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, rest));\n});\n\nexport { PointerLockControls };\n"]},"metadata":{},"sourceType":"module"}