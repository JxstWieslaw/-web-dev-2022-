{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useLoader, useFrame, createPortal } from '@react-three/fiber';\nimport { CubeReflectionMapping, EquirectangularReflectionMapping, Scene, WebGLCubeRenderTarget, HalfFloatType, CubeTextureLoader, BackSide } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\nimport vertexShader from '../helpers/glsl/GroundProjection.vert.glsl.js';\nimport fragmentShader from '../helpers/glsl/GroundProjection.frag.glsl.js';\nimport { Icosahedron } from './shapes.js';\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\n\nconst isCubeTexture = def => def && def.isCubeTexture;\n\nconst isRef = obj => obj.current && obj.current.isScene;\n\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\n\nfunction EnvironmentMap(_ref2) {\n  let {\n    scene,\n    background = false,\n    map\n  } = _ref2;\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    if (map) {\n      const target = resolveScene(scene || defaultScene);\n      const oldbg = target.background;\n      const oldenv = target.environment;\n      if (background !== 'only') target.environment = map;\n      if (background) target.background = map;\n      return () => {\n        if (background !== 'only') target.environment = oldenv;\n        if (background) target.background = oldbg;\n      };\n    }\n  }, [defaultScene, scene, map, background]);\n  return null;\n}\n\nfunction useEnvironment(_ref3) {\n  let {\n    files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n    path = '',\n    preset = undefined,\n    extensions\n  } = _ref3;\n\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader;\n  const loaderResult = useLoader( // @ts-expect-error\n  loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? // @ts-ignore\n  loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  return texture;\n}\n\nfunction EnvironmentCube(_ref4) {\n  let {\n    background = false,\n    scene,\n    ...rest\n  } = _ref4;\n  const texture = useEnvironment(rest);\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = texture;\n    if (background) target.background = texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [texture, background, scene, defaultScene]);\n  return null;\n}\n\nfunction EnvironmentPortal(_ref5) {\n  let {\n    children,\n    near = 1,\n    far = 1000,\n    resolution = 256,\n    frames = 1,\n    map,\n    background = false,\n    scene,\n    files,\n    path,\n    preset = undefined,\n    extensions\n  } = _ref5;\n  const gl = useThree(state => state.gl);\n  const defaultScene = useThree(state => state.scene);\n  const camera = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useLayoutEffect(() => {\n    if (frames === 1) camera.current.update(gl, virtualScene);\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = fbo.texture;\n    if (background) target.background = fbo.texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [children, virtualScene, fbo.texture, scene, defaultScene, background, frames, gl]);\n  let count = 1;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(gl, virtualScene);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), files || preset ? /*#__PURE__*/React.createElement(EnvironmentCube, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions\n  }) : map ? /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    map: map,\n    extensions: extensions\n  }) : null), virtualScene));\n}\n\nfunction EnvironmentGround(props) {\n  var _props$ground, _props$ground2, _scale, _props$ground3;\n\n  const textureDefault = useEnvironment(props);\n  const texture = props.map || textureDefault;\n  const isCubeMap = isCubeTexture(texture);\n  const defines = React.useMemo(() => {\n    var _ref, _texture$image$;\n\n    const w = (_ref = isCubeMap ? (_texture$image$ = texture.image[0]) == null ? void 0 : _texture$image$.width : texture.image.width) !== null && _ref !== void 0 ? _ref : 1024;\n    const cubeSize = w / 4;\n\n    const _lodMax = Math.floor(Math.log2(cubeSize));\n\n    const _cubeSize = Math.pow(2, _lodMax);\n\n    const width = 3 * Math.max(_cubeSize, 16 * 7);\n    const height = 4 * _cubeSize;\n    return [isCubeMap ? `#define ENVMAP_TYPE_CUBE` : '', `#define CUBEUV_TEXEL_WIDTH ${1.0 / width}`, `#define CUBEUV_TEXEL_HEIGHT ${1.0 / height}`, `#define CUBEUV_MAX_MIP ${_lodMax}.0`, ``];\n  }, []);\n  const fragment = React.useMemo(() => defines.join('\\n') + fragmentShader, [defines]);\n  const uniforms = React.useMemo(() => ({\n    cubemap: {\n      value: null\n    },\n    height: {\n      value: 15\n    },\n    radius: {\n      value: 60\n    }\n  }), []);\n  const mat = React.useRef(null);\n  const height = (_props$ground = props.ground) == null ? void 0 : _props$ground.height;\n  const radius = (_props$ground2 = props.ground) == null ? void 0 : _props$ground2.radius;\n  const scale = (_scale = (_props$ground3 = props.ground) == null ? void 0 : _props$ground3.scale) !== null && _scale !== void 0 ? _scale : 1000;\n  React.useEffect(() => void (height && (mat.current.uniforms.height.value = height)), [height]);\n  React.useEffect(() => void (radius && (mat.current.uniforms.radius.value = radius)), [radius]);\n  React.useEffect(() => void (mat.current.uniforms.cubemap.value = texture), [texture]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnvironmentMap, _extends({}, props, {\n    map: texture\n  })), /*#__PURE__*/React.createElement(Icosahedron, {\n    scale: scale,\n    args: [1, 16]\n  }, /*#__PURE__*/React.createElement(\"shaderMaterial\", {\n    ref: mat,\n    side: BackSide,\n    vertexShader: vertexShader,\n    fragmentShader: fragment,\n    uniforms: uniforms\n  })));\n}\n\nfunction Environment(props) {\n  return props.ground ? /*#__PURE__*/React.createElement(EnvironmentGround, props) : props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\n\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal, useEnvironment };","map":{"version":3,"sources":["C:/Users/pc/Documents/Repositories/web-dev-2022/26_try-on-gallery/features/26_r3f-web-avatar/client/node_modules/@react-three/drei/core/Environment.js"],"names":["_extends","React","useThree","useLoader","useFrame","createPortal","CubeReflectionMapping","EquirectangularReflectionMapping","Scene","WebGLCubeRenderTarget","HalfFloatType","CubeTextureLoader","BackSide","RGBELoader","presetsObj","vertexShader","fragmentShader","Icosahedron","CUBEMAP_ROOT","isCubeTexture","def","isRef","obj","current","isScene","resolveScene","scene","EnvironmentMap","background","map","defaultScene","state","useLayoutEffect","target","oldbg","oldenv","environment","useEnvironment","files","path","preset","undefined","extensions","Error","Object","keys","join","isCubeMap","Array","isArray","loader","loaderResult","setPath","texture","mapping","EnvironmentCube","rest","EnvironmentPortal","children","near","far","resolution","frames","gl","camera","useRef","virtualScene","useState","fbo","useMemo","type","update","count","Infinity","createElement","Fragment","ref","args","EnvironmentGround","props","_props$ground","_props$ground2","_scale","_props$ground3","textureDefault","defines","_ref","_texture$image$","w","image","width","cubeSize","_lodMax","Math","floor","log2","_cubeSize","pow","max","height","fragment","uniforms","cubemap","value","radius","mat","ground","scale","useEffect","side","Environment"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useLoader, useFrame, createPortal } from '@react-three/fiber';\nimport { CubeReflectionMapping, EquirectangularReflectionMapping, Scene, WebGLCubeRenderTarget, HalfFloatType, CubeTextureLoader, BackSide } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\nimport vertexShader from '../helpers/glsl/GroundProjection.vert.glsl.js';\nimport fragmentShader from '../helpers/glsl/GroundProjection.frag.glsl.js';\nimport { Icosahedron } from './shapes.js';\n\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\n\nconst isCubeTexture = def => def && def.isCubeTexture;\n\nconst isRef = obj => obj.current && obj.current.isScene;\n\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\n\nfunction EnvironmentMap({\n  scene,\n  background = false,\n  map\n}) {\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    if (map) {\n      const target = resolveScene(scene || defaultScene);\n      const oldbg = target.background;\n      const oldenv = target.environment;\n      if (background !== 'only') target.environment = map;\n      if (background) target.background = map;\n      return () => {\n        if (background !== 'only') target.environment = oldenv;\n        if (background) target.background = oldbg;\n      };\n    }\n  }, [defaultScene, scene, map, background]);\n  return null;\n}\nfunction useEnvironment({\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  extensions\n}) {\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader;\n  const loaderResult = useLoader( // @ts-expect-error\n  loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? // @ts-ignore\n  loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  return texture;\n}\nfunction EnvironmentCube({\n  background = false,\n  scene,\n  ...rest\n}) {\n  const texture = useEnvironment(rest);\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = texture;\n    if (background) target.background = texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [texture, background, scene, defaultScene]);\n  return null;\n}\nfunction EnvironmentPortal({\n  children,\n  near = 1,\n  far = 1000,\n  resolution = 256,\n  frames = 1,\n  map,\n  background = false,\n  scene,\n  files,\n  path,\n  preset = undefined,\n  extensions\n}) {\n  const gl = useThree(state => state.gl);\n  const defaultScene = useThree(state => state.scene);\n  const camera = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useLayoutEffect(() => {\n    if (frames === 1) camera.current.update(gl, virtualScene);\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = fbo.texture;\n    if (background) target.background = fbo.texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [children, virtualScene, fbo.texture, scene, defaultScene, background, frames, gl]);\n  let count = 1;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(gl, virtualScene);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), files || preset ? /*#__PURE__*/React.createElement(EnvironmentCube, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions\n  }) : map ? /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    map: map,\n    extensions: extensions\n  }) : null), virtualScene));\n}\n\nfunction EnvironmentGround(props) {\n  var _props$ground, _props$ground2, _scale, _props$ground3;\n\n  const textureDefault = useEnvironment(props);\n  const texture = props.map || textureDefault;\n  const isCubeMap = isCubeTexture(texture);\n  const defines = React.useMemo(() => {\n    var _ref, _texture$image$;\n\n    const w = (_ref = isCubeMap ? (_texture$image$ = texture.image[0]) == null ? void 0 : _texture$image$.width : texture.image.width) !== null && _ref !== void 0 ? _ref : 1024;\n    const cubeSize = w / 4;\n\n    const _lodMax = Math.floor(Math.log2(cubeSize));\n\n    const _cubeSize = Math.pow(2, _lodMax);\n\n    const width = 3 * Math.max(_cubeSize, 16 * 7);\n    const height = 4 * _cubeSize;\n    return [isCubeMap ? `#define ENVMAP_TYPE_CUBE` : '', `#define CUBEUV_TEXEL_WIDTH ${1.0 / width}`, `#define CUBEUV_TEXEL_HEIGHT ${1.0 / height}`, `#define CUBEUV_MAX_MIP ${_lodMax}.0`, ``];\n  }, []);\n  const fragment = React.useMemo(() => defines.join('\\n') + fragmentShader, [defines]);\n  const uniforms = React.useMemo(() => ({\n    cubemap: {\n      value: null\n    },\n    height: {\n      value: 15\n    },\n    radius: {\n      value: 60\n    }\n  }), []);\n  const mat = React.useRef(null);\n  const height = (_props$ground = props.ground) == null ? void 0 : _props$ground.height;\n  const radius = (_props$ground2 = props.ground) == null ? void 0 : _props$ground2.radius;\n  const scale = (_scale = (_props$ground3 = props.ground) == null ? void 0 : _props$ground3.scale) !== null && _scale !== void 0 ? _scale : 1000;\n  React.useEffect(() => void (height && (mat.current.uniforms.height.value = height)), [height]);\n  React.useEffect(() => void (radius && (mat.current.uniforms.radius.value = radius)), [radius]);\n  React.useEffect(() => void (mat.current.uniforms.cubemap.value = texture), [texture]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnvironmentMap, _extends({}, props, {\n    map: texture\n  })), /*#__PURE__*/React.createElement(Icosahedron, {\n    scale: scale,\n    args: [1, 16]\n  }, /*#__PURE__*/React.createElement(\"shaderMaterial\", {\n    ref: mat,\n    side: BackSide,\n    vertexShader: vertexShader,\n    fragmentShader: fragment,\n    uniforms: uniforms\n  })));\n}\n\nfunction Environment(props) {\n  return props.ground ? /*#__PURE__*/React.createElement(EnvironmentGround, props) : props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\n\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal, useEnvironment };\n"]},"metadata":{},"sourceType":"module"}